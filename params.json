{"name":"Localstorage","tagline":"local storage for browser","body":"<h2> Local Storage , Supported in HTML5, to store data locally in browser by key value pair, up to 5 mb</h2>\r\n<h3>here are little example that can show you , how to use this library</h3>\r\n<h3>About Library:</h3>\r\n<p>\r\n* you will need jquery for this\r\n<br>\r\nYou can use this library to store data in local storage of browser, if it is supported,\r\nIt extend the local storage function of browser , and provide a way to you to interact with storage based on your need,\r\nit can be used as<b> BROWSER CACHE FOR YOUR SERVER SIDE API DATA</b>, that you hit frequently.\r\n<br>\r\nThis API can store data for a period of time, that is expiry time, and can delete it after that time, \r\na function does this automatically. from that you can check if you need to hit api , or not.\r\nYou can append data to an existing storage.\r\n \r\n <br><hr>\r\n <b>How To test what is going on.</b>\r\n <br>\r\n Steps:-\r\n <br>\r\n*  open this page in chrome. \r\n\t<br>\r\n*  open developer console\r\n<br>\r\n*  Select Resource Tab\r\n<br>\r\n* expand local storage from left\r\n<br>\r\n* click on  page name, it will storage in right side.\t\r\n \r\n</p>\r\n <b>List</b>\r\n<br>\r\n<hr>\r\n<ul>\r\n<li><a href=\"#isStorageSupport\"> isStorageSupport</a>: check if browser support local storage</li>\r\n\t<li><a href=\"#storeObj\">storeObj</a>: Storage Object</li>\r\n\t<li><a href=\"#handleStorage\"> handleStorage</a>: automatically handle all things after setup</li>\r\n\t<li><a href=\"#setExpireTime\">setExpireTime</a>: To Set Expire Time</li>\t\r\n\t<li><a href=\"#getExpireTime\"> getExpireTime</a>:  To Set Expire Time</li>\r\n\t<li><a href=\"#setStorage\"> setStorage</a>: Store data in Local Storage</li>\r\n\t\t<li><a href=\"#getStorage\"> getStorage</a>: Get Data From Local Storage</li>\r\n\t\t<li><a href=\"#isKeyExist\"> isKeyExist</a>: check if key exist in local storage</li>\r\n\t<li><a href=\"#getKeyTimeStamp\"> getKeyTimeStamp</a>: Get Key Stamp Of Item , when it was saved</li>\r\n\t<li><a href=\"#isExpired\"> isExpired</a>: check with expiry time</li>\r\n\r\n\t\t<li><a href=\"#addTimeStampInJson\"> addTimeStampInJson</a>: if you want to explicitly add time stamp in json</li>\r\n\t<li><a href=\"#addItemValueByKey\"> addItemValueByKey</a>: append data by key value , already stored in local Storage</li>\r\n\t\t<li><a href=\"#getItemValueByKey\">getItemValueByKey</a>: Retrieve item value by key</li>\r\n\t\r\n\t<li><a href=\"#clearStorageByKey\"> clearStorageByKey </a>: Clear Storage By Key</li>\r\n\t<li><a href=\"#clearStorage\"> clearStorage</a>: Clear All</li>\r\n\t<li><a href=\"#storageSize\"> storageSize</a>: get size of storage</li>\r\n\t<li><a href=\"#logDetail\"> logDetail</a>: Log everything on console</li>\r\n\t<li><a href=\"#setDebeug\"> setDebug</a>: if true Log everything on console, by default false;</li>\r\n\r\n</ul>\r\n<div class=\"data\">\r\n<p> let say our data in json is data = {\"a\":1,\"b\":{\"b1\":\"1\",\"b2\":2},\"c\":3} and we want to operate it with our function\r\nlet say storage key is \"EXAMPLE\"</p>\r\n<p> Let's have a storage obj \r\n<br>\r\nfor debug set <pre>ls.setDebug(true); // it will log in console.</pre>\r\n<br> By default expiry time is 1800 second;\r\n<br> Data Should be In JSON Format;\r\n</p>\r\n<p><b> To RUN Example , simply open debugger console panel in window  and copy paste that code , and run it.</b></p>\r\n<fieldset id=\"isStorageSupport\">\r\n<legend> isStorageSupport</legend>\r\n<pre>\r\nif(ls.isStorageSupport()){\r\nalert(true);\r\n}else{\r\nalert(false);\r\n}\r\n\r\n</pre>\r\n</fieldset>\r\n\r\n<fieldset id=\"storeObj\">\r\n<legend> storeObj</legend>\r\n<pre>\r\n\r\nconsole.log(ls.storeObj);\r\n\r\n</pre>\r\nwill return storage object.\r\n</fieldset>\r\n\r\n\r\n\r\n<fieldset id=\"handleStorage\">\r\n<legend> handleStorage</legend>\r\nthis function is most desired function to handle local storage.\r\n<pre>\r\nls.setDebug(true);\r\nvar key = \"EXAMPLE\";\r\nvar data = {\"a\":1,\"b\":{\"b1\":\"1\",\"b2\":2},\"c\":3};\r\nvar addTimeStamp = true;\r\nvar option = '';//{doStore:  true, itemValuePair:false, other:false};\r\n\t\t\t\t\t\t// itemValuePair  is another object in json format to store with that key. \r\nls.handleStorage(key, data, addTimeStamp, option);\r\n\r\nNote:- value passed in other will not be stored in local storage.\r\n</pre>\r\nwill save the data in local storage.\r\n</fieldset>\r\n\r\n<fieldset id=\"setExpireTime\">\r\n<legend> setExpireTime</legend>\r\nthis function is used to set expiry time globally\r\n<pre>\r\nls.setExpireTime(1200); // in seconds, by default 1800 seconds\r\n\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n<fieldset id=\"getExpireTime\">\r\n<legend> getExpireTime</legend>\r\nthis function is used to get expiry time \r\n<pre>\r\n\r\nconsole.log(ls.getExpireTime()); // in seconds, by default 1800 seconds\r\n\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n\r\n\r\n<fieldset id=\"setStorage\">\r\n<legend> setStorage</legend>\r\nthis function is used to set storage, if you do not want to use handleStorage() function. \r\n<pre>\r\nls.setDebug(true);\r\nvar key = \"EXAMPLE\";\r\nvar data = {\"a\":1,\"b\":{\"b1\":\"1\",\"b2\":2},\"c\":3};\r\nvar addTimeStamp = true;\r\nvar itemValuePair= false;\t\t\t// itemValuePair  is another object in json format to store with that key. \r\n\r\nls.setStorage(key, data, addTimeStamp,itemValuePair);\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n<fieldset id=\"getStorage\">\r\n<legend> getStorage</legend>\r\nthis function is used to get stored data by key \r\n<pre>\r\nls.setDebug(true);\r\nvar key = \"EXAMPLE\";\r\n\r\nconsole.log(ls.getStorage(key));\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n\r\n\r\n<fieldset id=\"isKeyExist\">\r\n<legend> isKeyExist</legend>\r\nthis function is used to check if stored key exist in local storage \r\n<pre>\r\nls.setDebug(true);\r\n\r\nvar key = \"EXAMPLE\";\r\nconsole.log(ls.isKeyExist(key));\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n<fieldset id=\"getKeyTimeStamp\">\r\n<legend> getKeyTimeStamp</legend>\r\nthis function is used to get time stamp value at which data was saved\r\n<pre>\r\nls.setDebug(true);\r\nvar key = \"EXAMPLE\";\r\n\r\nconsole.log(ls.getKeyTimeStamp(key));\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n<fieldset id=\"isExpired\">\r\n<legend> isExpired</legend>\r\nthis function is used to check if key data is expired with respect to expiry time\r\n<pre>\r\nls.setDebug(true);\r\nvar key = \"EXAMPLE\";\r\nvar eT = 1200; //it is optional , if blank then check global expiry time\r\nvar clearKey =false; // by default true, if expired then clear the data from storage.\r\nconsole.log(ls.isExpired(key, eT, clearKey));\r\n\r\n\r\n</pre>\r\n\r\n</fieldset>\r\n<fieldset id=\"addTimeStampInJson\">\r\n<legend> addTimeStampInJson</legend>\r\nthis function is used to manually add timeStamp in json data\r\n<pre>\r\nls.setDebug(true);\r\nvar data = '{\"a\":1}';\r\nconsole.log(ls.addTimeStampInJson(data));\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"addItemValueByKey\">\r\n<legend> addItemValueByKey</legend>\r\nthis function is used to manually add item value pair in stored data\r\n<pre>\r\nls.setDebug(true);\r\nvar storeKey = 'EXAMPLE';\r\nvar item =\"b\";\r\nvar value = 2;\r\nconsole.log(ls.addItemValueByKey(storeKey,item, value));\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"getItemValueByKey\">\r\n<legend> getItemValueByKey</legend>\r\nthis function is used to get item value  data\r\n<pre>\r\nls.setDebug(true);\r\nvar storeKey = 'EXAMPLE';\r\nvar item =\"b\";\r\n\r\nconsole.log(ls.getItemValueByKey(storeKey,item) );\r\n</pre>\r\n</fieldset>\r\n\r\n\r\n<fieldset id=\"clearStorageByKey\">\r\n<legend> clearStorageByKey</legend>\r\nthis function is used to clear data from local storage through key\r\n<pre>\r\nls.setDebug(true);\r\nvar storeKey = 'EXAMPLE';\r\n\r\n\r\nconsole.log(ls.clearStorageByKey(storeKey) );\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"clearStorage\">\r\n<legend> clearStorage</legend>\r\nthis function is used to clear all storage\r\n<pre>\r\nconsole.log(ls.clearStorage() );\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"storageSize\">\r\n<legend> storageSize</legend>\r\nthis function is used to calculate storage size , but it is slow , not recommended to use\r\n<pre>\r\nconsole.log(ls.storageSize() );\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"logDetail\">\r\n<legend> logDetail</legend>\r\nthis function is used to log Detail on console if debug is true, but by default debug is false;\r\n<pre>\r\nconsole.log(ls.logDetail(\"any data\") );\r\n</pre>\r\n</fieldset>\r\n<fieldset id=\"setDebug\">\r\n<legend> setDebug</legend>\r\nthis function is used to set debug true or false, that will handle logDetail function,\r\n<pre>\r\nconsole.log(ls.setDebug(true) );\r\n</pre>\r\n</fieldset>\r\n</div>\r\n<hr>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}